name: Release
on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  releaser:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    env:
      GOPATH: ${{ github.workspace }}
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Update Changelog
        id: Changelog
        uses: Bullrich/generate-release-changelog@master
        env:
          REPO: ${{ github.repository }}
      - name: Softprops Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
  builder:
    name: Build TransferDB
    needs: releaser
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GOBIN: ${{ github.workspace }}/bin
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      - name: View Golang
        run: |
          go version
          go env
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Run tests
        shell: bash
        run: |
          cd ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
          go test -v -covermode=count
      - name: Gen Go Ldflags
        id: genLdflags
        run: |
          CODEREPO="github/${{ github.repository }}"
          COMMIT="-X \"${CODEREPO}/config.Version=`git describe --always --no-match --tags --dirty="-dev"`\""
          BUILDTS="-X \"${CODEREPO}/config.BuildTS=`TZ=CST-8 date '+%Y-%m-%d %H:%M:%S'`\""
          GITHASH="-X \"${CODEREPO}/config.GitHash=`git rev-parse HEAD`\""
          GITREF="-X \"${CODEREPO}/config.GitBranch=`git rev-parse --abbrev-ref HEAD`\""
          LDFLAGS="-s -w ${COMMIT} ${BUILDTS} ${GITHASH} ${GITREF}"
          echo "ldflags=${LDFLAGS}" >> $GITHUB_ENV
      - name: Run Xgo Build Binary
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: 1.19
          dest: bin
          prefix: transferdb
          targets: linux/amd64,linux/arm64,darwin/arm64,darwin/amd64,windows/amd64
          v: true
          x: true
          race: false
          ldflags: ${{ env.ldflags }}
          buildmode: default
          trimpath: true
          working_dir: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      - name: Package Xgo Binary
        run: |
          cp ./example/config.toml bin
          tar -zcvf transferdb-platform-bin.tar.gz bin/*
      - name: Upload Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.releaser.outputs.upload_url }}
          asset_path: transferdb-platform-bin.tar.gz
          asset_name: transferdb-platform-bin.tar.gz
          asset_content_type: application/gzip
